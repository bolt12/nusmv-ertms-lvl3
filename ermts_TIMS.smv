MODULE main

/--
    Este módulo modelo um único comboio ERTMS-TIMS, numa linhas.
    Todas as propriedades aqui especificadas são verdadeiras.
--/

VAR
    line : array 0..2 of array 0..4 of { f, o, u, a }; -- Uma linha com 3 TTD's em que cada uma possui 5 VSS.
                                                       -- f: free | o: occupied | u: unknown | a: ambiguous
    train : 0..14; -- Comboio ERTMS-TIMS pode ocupar 15 VSS's.

    is_integer : boolean;

    break_position : -1..14; -- Posição onde o comboio se quebra.

    ma : 0..15; -- Em comboios ERTMS-TIMS o MA é de VSS em VSS.

IVAR
    action : { a, b }; -- Tipos possíveis de ação
                       -- a : advance, b : break

-- INIT

DEFINE

    is_train_in_ttd0 := train >= 0 & train < 5 ;
    is_train_in_ttd1 := train >= 5 & train < 10 ;
    is_train_in_ttd2 := train >= 10 & train < 15 ;

    is_break_in_ttd0 := break_position >= 0 & break_position < 5 ;
    is_break_in_ttd1 := break_position >= 5 & break_position < 10 ;
    is_break_in_ttd2 := break_position >= 10 & break_position < 15 ;

    is_ttd0_free := line[0][0] = f & line[0][1] = f & line[0][2] = f & line[0][3] = f & line[0][4] = f;
    is_ttd1_free := line[1][0] = f & line[1][1] = f & line[1][2] = f & line[1][3] = f & line[1][4] = f;
    is_ttd2_free := line[2][0] = f & line[2][1] = f & line[2][2] = f & line[2][3] = f & line[2][4] = f;
    
    -- Como a informação de um TTD é segura, quando um comboio sai de uma TTD e este está integro, a anterior é libertada.
    ttd_is_safe_integer := (is_train_in_ttd1 & is_integer -> is_ttd0_free) &
                            (is_train_in_ttd2 & is_integer & !is_break_in_ttd0 -> (is_ttd1_free & is_ttd0_free));

    -- Integridade pode ser confirmada, e assumindo que o comboio está integro, todas as VSS's no TTD em questão estão livres
    -- Ex: 
    --   | f | f | f | o | f |
    integrity_integer := (train mod 5 = 1 & is_integer -> line[train/5][0] = f) &
                         (train mod 5 = 2 & is_integer -> line[train/5][0] = f & line[train/5][1] = f) &
                         (train mod 5 = 3 & is_integer -> line[train/5][0] = f & line[train/5][1] = f & line[train/5][2] = f) &
                         (train mod 5 = 4 & is_integer -> line[train/5][0] = f & line[train/5][1] = f & line[train/5][2] = f &line[train/5][3] = f);

    -- Integridade pode ser confirmada, mas caso comboio não esteja integro, todas as VSS's no TTD em que não houve quebra estão livres
    -- Ex: 
    --    break_position[1] = 4 & train = 11 -> {| f | f | f | f | u |}{| f | f | f | f | f |}{| f | o | f | f | f |}
    integrity_non_integer := (is_break_in_ttd0 -> is_ttd1_free & is_ttd2_free) &
                             (is_break_in_ttd1 -> is_ttd2_free);

ASSIGN
    init(train) := 0;
    init(ma) := 1;
    init(is_integer) := TRUE;
    init(break_position) := -1;

/--
Estado inicial tendo em conta a posição inicial do train.

    init(line[0][0]) := o; -- Comboio ERTMS NON-TIMS começa na VSS 0
    init(line[0][1]) := u; 
    init(line[0][2]) := u;
    init(line[0][3]) := u; 
    init(line[0][4]) := u;  
    init(line[1][0]) := f; -- TTD 1
    init(line[1][1]) := f;
    init(line[1][2]) := f;
    init(line[1][3]) := f;
    init(line[1][4]) := f;
    init(line[2][0]) := f; -- TTD 2
    init(line[2][1]) := f;
    init(line[2][2]) := f;
    init(line[2][3]) := f;
    init(line[2][4]) := f;
--/

    next(ma) := case
                   ma = 14 : ma;
                   is_train_in_ttd0 & line[0][(train + 1) mod 5] = f : train + 1;
                   train = 4 & line[1][0] = f : train + 1;                          -- A conta ((train + 1) mod 5) não inclui a mudança de TTD
                   is_train_in_ttd1 & line[1][(train + 1) mod 5] = f : train + 1;
                   train = 9 & line[2][0] = f : train + 1;                          -- A conta ((train + 1) mod 5) não inclui a mudança de TTD
                   is_train_in_ttd2 & line[2][(train + 1) mod 5] = f : train + 1;
                   TRUE : ma;
                esac;

    next(train) := case
                    train = 14 : 14;
                    train < ma & action = a : train + 1; -- O comboio avança caso o MA lhe diga que pode avançar
                    TRUE : train;
                   esac;

    next(is_integer) := case
                         action = b & is_integer = TRUE & break_position = -1 : FALSE;             -- Se o comboio ainda não se partiu, o comboio parte-se
                         action = b & is_integer = FALSE : FALSE;                                  -- Caso o comboio já se tenha partido, não se parte novamente
                         is_break_in_ttd0 & is_train_in_ttd2 : TRUE;                               /-- Caso o comboio esteja duas TTD's à frente da TTD onde houve
                                                                                                       quebra, então pode ser considerado integer outra vez
                                                                                                   --/
                         TRUE : is_integer;
                        esac;

    next(break_position) := case
                             !is_integer & break_position = -1: train;
                             TRUE : break_position;
                            esac;

    line[0][0] := case -- ERTMS-NonTIMS train triggers the VSS 0
                    is_train_in_ttd0 & is_integer & train > 0 : f;       /-- Se o comboio está no TTD em questão e está integro
                                                                             mas num VSS à frente do VSS em questão então passa a "free"
                                                                         --/
                    break_position = 0 & train = 0 : a;                  -- Se o comboio se parte no VSS em questão então passa a "ambiguous"
                    is_integer & train = 0 : o;                          -- Se o comboio (integro) estiver na posição do VSS então ele está ocupado
                    break_position = 0 & train > 0 : u;                  -- Se o comboio se partiu no VSS 0 mas a sua posição está a frente desse VSS
                    !is_train_in_ttd0 & is_integer : f;                  -- Caso o comboio (integro) não esteja no TTD em questão então este passa a "free"
                    TRUE : f;
                  esac; 

    line[0][1] := case
                    is_integer & train = 1 : o;                          -- Se o comboio (integro) estiver na posição do VSS então ele está ocupado
                    break_position < 1 & train > 1 & !is_integer: u;     -- Se o comboio se partiu para trás da posição atual e este não está integro
                    break_position = 1 & train = 1 : a;                  -- Se o comboio se parte no VSS em questão então passa a "ambiguous"
                    !is_train_in_ttd0 & is_integer : f;                  -- Caso o comboio (integro) não esteja no TTD em questão então este passa a "free"
                    TRUE : f;
                  esac; 
    line[0][2] := case
                    is_integer & train = 2 : o;                          -- Se o comboio (integro) estiver na posição do VSS então ele está ocupado
                    break_position < 2 & train > 2 & !is_integer: u;     -- Se o comboio se partiu para trás da posição atual e este não está integro
                    break_position = 2 & train = 2 : a;                  -- Se o comboio se parte no VSS em questão então passa a "ambiguous"
                    !is_train_in_ttd0 & is_integer : f;                  -- Caso o comboio (integro) não esteja no TTD em questão então este passa a "free"
                    TRUE : f;
                  esac;
    line[0][3] := case
                    is_integer & train = 3 : o;                          -- Se o comboio (integro) estiver na posição do VSS então ele está ocupado
                    break_position < 3 & train > 3 & !is_integer: u;     -- Se o comboio se partiu para trás da posição atual e este não está integro
                    break_position = 3 & train = 3 : a;                  -- Se o comboio se parte no VSS em questão então passa a "ambiguous"
                    !is_train_in_ttd0 & is_integer : f;                  -- Caso o comboio (integro) não esteja no TTD em questão então este passa a "free"
                    TRUE : f;
                  esac;
    line[0][4] := case
                    is_integer & train = 4 : o;                          -- Se o comboio (integro) estiver na posição do VSS então ele está ocupado
                    break_position < 4 & train > 4 & !is_integer: u;     -- Se o comboio se partiu para trás da posição atual e este não está integro
                    break_position = 4 & train = 4 : a;                  -- Se o comboio se parte no VSS em questão então passa a "ambiguous"
                    !is_train_in_ttd0 & is_integer : f;                  -- Caso o comboio (integro) não esteja no TTD em questão então este passa a "free"
                    TRUE : f;
                  esac; -- 
    line[1][0] := case -- TTD 1
                    is_integer & train = 5 : o;                          -- Se o comboio (integro) estiver na posição do VSS então ele está ocupado
                    break_position < 5 & train > 5 & !is_integer: u;     -- Se o comboio se partiu para trás da posição atual e este não está integro
                    break_position = 5 & train = 5 : a;                  -- Se o comboio se parte no VSS em questão então passa a "ambiguous"
                    !is_train_in_ttd1 & is_integer : f;                  -- Caso o comboio (integro) não esteja no TTD em questão então este passa a "free"
                    TRUE : f;
                  esac;
    line[1][1] := case
                    is_integer & train = 6 : o;                          -- Se o comboio (integro) estiver na posição do VSS então ele está ocupado
                    break_position < 6 & train > 6 & !is_integer: u;     -- Se o comboio se partiu para trás da posição atual e este não está integro
                    break_position = 6 & train = 6 : a;                  -- Se o comboio se parte no VSS em questão então passa a "ambiguous"
                    !is_train_in_ttd1 & is_integer : f;                  -- Caso o comboio (integro) não esteja no TTD em questão então este passa a "free"
                    TRUE : f;
                  esac;
    line[1][2] := case
                    is_integer & train = 7 : o;                          -- Se o comboio (integro) estiver na posição do VSS então ele está ocupado
                    break_position < 7 & train > 7 & !is_integer: u;     -- Se o comboio se partiu para trás da posição atual e este não está integro
                    break_position = 7 & train = 7 : a;                  -- Se o comboio se parte no VSS em questão então passa a "ambiguous"
                    !is_train_in_ttd1 & is_integer : f;                  -- Caso o comboio (integro) não esteja no TTD em questão então este passa a "free"
                    TRUE : f;
                  esac;
    line[1][3] := case
                    is_integer & train = 8 : o;                          -- Se o comboio (integro) estiver na posição do VSS então ele está ocupado
                    break_position < 8 & train > 8 & !is_integer: u;     -- Se o comboio se partiu para trás da posição atual e este não está integro
                    break_position = 8 & train = 8 : a;                  -- Se o comboio se parte no VSS em questão então passa a "ambiguous"
                    !is_train_in_ttd1 & is_integer : f;                  -- Caso o comboio (integro) não esteja no TTD em questão então este passa a "free"
                    TRUE : f;
                  esac;
    line[1][4] := case
                    is_integer & train = 9 : o;                          -- Se o comboio (integro) estiver na posição do VSS então ele está ocupado
                    break_position < 9 & train > 9 & !is_integer: u;     -- Se o comboio se partiu para trás da posição atual e este não está integro
                    break_position = 9 & train = 9 : a;                  -- Se o comboio se parte no VSS em questão então passa a "ambiguous"
                    !is_train_in_ttd1 & is_integer : f;                  -- Caso o comboio (integro) não esteja no TTD em questão então este passa a "free"
                    TRUE : f;
                  esac;
    line[2][0] := case  -- TTD 2
                    is_integer & train = 10 : o;                          -- Se o comboio (integro) estiver na posição do VSS então ele está ocupado
                    break_position < 10 & train > 10 & !is_integer: u;     -- Se o comboio se partiu para trás da posição atual e este não está integro
                    break_position = 10 & train = 10 : a;                 -- Se o comboio se parte no VSS em questão então passa a "ambiguous"
                    !is_train_in_ttd2 & is_integer : f;                   -- Caso o comboio (integro) não esteja no TTD em questão então este passa a "free"
                    TRUE : f;
                  esac;
    line[2][1] := case
                    is_integer & train = 11 : o;                          -- Se o comboio (integro) estiver na posição do VSS então ele está ocupado
                    break_position < 11 & train > 11 & !is_integer: u;     -- Se o comboio se partiu para trás da posição atual e este não está integro
                    break_position = 11 & train = 11 : a;                 -- Se o comboio se parte no VSS em questão então passa a "ambiguous"
                    !is_train_in_ttd2 & is_integer : f;                   -- Caso o comboio (integro) não esteja no TTD em questão então este passa a "free"
                    TRUE : f;
                  esac;
    line[2][2] := case
                    is_integer & train = 12 : o;                          -- Se o comboio (integro) estiver na posição do VSS então ele está ocupado
                    break_position < 12 & train > 12 & !is_integer: u;     -- Se o comboio se partiu para trás da posição atual e este não está integro
                    break_position = 12 & train = 12 : a;                 -- Se o comboio se parte no VSS em questão então passa a "ambiguous"
                    !is_train_in_ttd2 & is_integer : f;                   -- Caso o comboio (integro) não esteja no TTD em questão então este passa a "free"
                    TRUE : f;
                  esac;
    line[2][3] := case
                    is_integer & train = 13 : o;                          -- Se o comboio (integro) estiver na posição do VSS então ele está ocupado
                    break_position < 13 & train > 13 & !is_integer: u;     -- Se o comboio se partiu para trás da posição atual e este não está integro
                    break_position = 13 & train = 13 : a;                 -- Se o comboio se parte no VSS em questão então passa a "ambiguous"
                    !is_train_in_ttd2 & is_integer : f;                   -- Caso o comboio (integro) não esteja no TTD em questão então este passa a "free"
                    TRUE : f;
                  esac;
    line[2][4] := case
                    is_integer & train = 14 : o;                          -- Se o comboio (integro) estiver na posição do VSS então ele está ocupado
                    break_position < 14 & train > 14 & !is_integer: u;     -- Se o comboio se partiu para trás da posição atual e este não está integro
                    break_position = 14 & train = 14 : a;                 -- Se o comboio se parte no VSS em questão então passa a "ambiguous"
                    !is_train_in_ttd2 & is_integer : f;                   -- Caso o comboio (integro) não esteja no TTD em questão então este passa a "free"
                    TRUE : f;
                  esac;

CTLSPEC AF train = 14;              -- Em todos os ramos, eventualmente o comboio chega ao destino.

CTLSPEC AG integrity_integer;       -- Em todos os ramos, se o comboio está numa VSS de um TTD, então todos os VSS para trás desse estão "unknown",
                                    -- pois não é possível inferir sobre a integridade do comboio.

CTLSPEC AF integrity_non_integer;   -- Em todos os ramos, eventualmenente, se o comboio se partir, todas as VSS's no TTD em que não
                                    -- houve quebra estão livres.

CTLSPEC AG ttd_is_safe_integer;     -- Em todos os ramos, como a informação vinda de uma TTD é segura, em todos os estados,
                                    -- se o comboio está numa TTD então todas para trás estão livres.


JUSTICE action = a;
