MODULE main

/--
    Este módulo modelo um único comboio No-ERTMS, numa linhas.
    Todas as propriedades aqui especificadas são verdadeiras.
--/

VAR
    line : array 0..4 of array 0..4 of { f, o, u, a }; -- Uma linha com 5 TTD's em que cada uma possui 5 VSS's
                                                       -- f: free | o: occupied | u: unknown | a: ambiguous
    train : 0..24; -- Comboio No-ERTMS pode ocupar 25 VSS's diferentes.

    ma : 0..4; -- Em comboios No-ERTMS, o MA é de TTD em TTD.

-- IVAR
 
-- INIT

DEFINE
    is_train_in_ttd0 := train >= 0 & train < 5;
    is_train_in_ttd1 := train >= 5 & train < 10;
    is_train_in_ttd2 := train >= 10 & train < 15;
    is_train_in_ttd3 := train >= 15 & train < 20;
    is_train_in_ttd4 := train >= 20 & train < 25;

    is_ttd0_free := line[0][0] = f & line[0][1] = f & line[0][2] = f & line[0][3] = f & line[0][4] = f;
    is_ttd1_free := line[1][0] = f & line[1][1] = f & line[1][2] = f & line[1][3] = f & line[1][4] = f;
    is_ttd2_free := line[2][0] = f & line[2][1] = f & line[2][2] = f & line[2][3] = f & line[2][4] = f;
    is_ttd3_free := line[3][0] = f & line[3][1] = f & line[3][2] = f & line[3][3] = f & line[3][4] = f;
    is_ttd4_free := line[4][0] = f & line[4][1] = f & line[4][2] = f & line[4][3] = f & line[4][4] = f;
    
    -- Como a informação de um TTD é segura, quando um comboio sai de uma TTD a anterior é libertada.
    ttd_is_safe := (is_train_in_ttd1 -> is_ttd0_free) &
                 (is_train_in_ttd2 -> (is_ttd1_free & is_ttd0_free)) &
                 (is_train_in_ttd3 -> (is_ttd2_free & is_ttd1_free & is_ttd0_free)) &
                 (is_train_in_ttd4 -> (is_ttd3_free & is_ttd2_free & is_ttd1_free & is_ttd0_free));

    -- Como a integridade não pode ser verificada todas as VSS's na TTD em questão estão "unknown"
    integrity :=  line[train/5][0] = u & line[train/5][1] = u & line[train/5][2] = u 
                 & line[train/5][3] = u & line[train/5][4] = u;

ASSIGN
    init(train) := 0;
    init(ma) := 1;

/--
Estado inicial tendo em conta a posição inicial do train.

    init(line[0][0]) := u; -- Comboio NON-TIMS começa na TTD 0
    init(line[0][1]) := u; 
    init(line[0][2]) := u; 
    init(line[0][3]) := u;
    init(line[0][4]) := u;
    init(line[1][0]) := f; -- TTD 1
    init(line[1][1]) := f;
    init(line[1][2]) := f;
    init(line[1][3]) := f;
    init(line[1][4]) := f;
    init(line[2][0]) := f; -- TTD 2
    init(line[2][1]) := f;
    init(line[2][2]) := f;
    init(line[2][3]) := f;
    init(line[2][4]) := f;
    init(line[3][0]) := f; -- TTD 3
    init(line[3][1]) := f;
    init(line[3][2]) := f;
    init(line[3][3]) := f;
    init(line[3][4]) := f;
    init(line[4][0]) := f; -- TTD 4
    init(line[4][1]) := f;
    init(line[4][2]) := f;
    init(line[4][3]) := f;
    init(line[4][4]) := f;
--/

    next(ma) := case
                   is_train_in_ttd0 & is_ttd1_free : 1;
                   is_train_in_ttd1 & is_ttd2_free : 2;
                   is_train_in_ttd2 & is_ttd3_free : 3;
                   is_train_in_ttd3 & is_ttd4_free : 4;
                   TRUE : ma;
                esac;

    next(train) := case
                    is_train_in_ttd0 & ma >= 0 : train + 1;
                    is_train_in_ttd1 & ma >= 1 : train + 1;
                    is_train_in_ttd2 & ma >= 2 : train + 1;
                    is_train_in_ttd3 & ma >= 3 : train + 1;
                    is_train_in_ttd4 & ma >= 4 & train < 24 : train + 1;
                    train = 24 : 24;
                    TRUE : train;
                   esac;

    -- Não é definido o next de cada posição da linha, mas sim o atual (por isso é que não é definido o inicial)
    -- Foi feito desta maneira pois os defines são calculados tendo em conta o estado atual e não o próximo.

    line[0][0] := case -- NON-ERTMS train triggers the TTD 0
                    is_train_in_ttd0 : u;
                    !is_train_in_ttd0 : f;
                  esac; 

    line[0][1] := case
                    is_train_in_ttd0 : u;
                    !is_train_in_ttd0 : f;
                  esac; 
    line[0][2] := case
                    is_train_in_ttd0 : u;
                    !is_train_in_ttd0 : f;
                  esac;
    line[0][3] := case
                    is_train_in_ttd0 : u;
                    !is_train_in_ttd0 : f;
                  esac;
    line[0][4] := case
                    is_train_in_ttd0 : u;
                    !is_train_in_ttd0 : f;
                  esac; 
    line[1][0] := case -- TTD 1
                    is_train_in_ttd1 : u;
                    !is_train_in_ttd1 : f;
                  esac;
    line[1][1] := case
                    is_train_in_ttd1 : u;
                    !is_train_in_ttd1 : f;
                  esac;
    line[1][2] := case
                    is_train_in_ttd1 : u;
                    !is_train_in_ttd1 : f;
                  esac;
    line[1][3] := case
                    is_train_in_ttd1 : u;
                    !is_train_in_ttd1 : f;
                  esac;
    line[1][4] := case
                    is_train_in_ttd1 : u;
                    !is_train_in_ttd1 : f;
                  esac;
    line[2][0] := case  -- TTD 2
                    is_train_in_ttd2 : u;
                    !is_train_in_ttd2 : f;
                  esac;
    line[2][1] := case
                    is_train_in_ttd2 : u;
                    !is_train_in_ttd2 : f;
                  esac;
    line[2][2] := case
                    is_train_in_ttd2 : u;
                    !is_train_in_ttd2 : f;
                  esac;
    line[2][3] := case
                    is_train_in_ttd2 : u;
                    !is_train_in_ttd2 : f;
                  esac;
    line[2][4] := case
                    is_train_in_ttd2 : u;
                    !is_train_in_ttd2 : f;
                  esac;
    line[3][0] := case
                    is_train_in_ttd3 : u;
                    !is_train_in_ttd3 : f;
                  esac; -- TTD 3
    line[3][1] := case
                    is_train_in_ttd3 : u;
                    !is_train_in_ttd3 : f;
                  esac;
    line[3][2] := case
                    is_train_in_ttd3 : u;
                    !is_train_in_ttd3 : f;
                  esac;
    line[3][3] := case
                    is_train_in_ttd3 : u;
                    !is_train_in_ttd3 : f;
                  esac;
    line[3][4] := case
                    is_train_in_ttd3 : u;
                    !is_train_in_ttd3 : f;
                  esac;
    line[4][0] := case -- TTD 4
                    is_train_in_ttd4 : u;
                    !is_train_in_ttd4 : f;
                  esac;
    line[4][1] := case
                    is_train_in_ttd4 : u;
                    !is_train_in_ttd4 : f;
                  esac;
    line[4][2] := case
                    is_train_in_ttd4 : u;
                    !is_train_in_ttd4 : f;
                  esac;
    line[4][3] := case
                    is_train_in_ttd4 : u;
                    !is_train_in_ttd4 : f;
                  esac;
    line[4][4] := case
                    is_train_in_ttd4 : u;
                    !is_train_in_ttd4 : f;
                  esac;

CTLSPEC AF train = 24;  -- Em todos os ramos, eventualemente o comboio chega ao destino.

CTLSPEC AG integrity;   -- Em todos os ramos, se o comboio está numa TTD, então todos os VSS estão "unknown",
                        -- pois não é possível inferir sobre a integridade do comboio.

CTLSPEC AG ttd_is_safe; -- Em todos os ramos, como a informação vinda de uma TTD é segura, em todos os estados,
                        -- se o comboio está numa TTD então todas para trás estão livres.
