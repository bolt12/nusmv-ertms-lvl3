MODULE main

/--
    Este módulo modelo um único comboio ERTMS-noTIMS, numa linhas.
    Todas as propriedades aqui especificadas são verdadeiras.
--/

VAR
    line : array 0..2 of array 0..4 of { f, o, u, a }; -- Uma linha com 3 TTD's em que cada um possui 5 VSS's
                                                       -- f: free | o: occupied | u: unknown | a: ambiguous
    train : 0..14; -- Comboio ERTMS-NoTIMs pode ocupar 15 VSS's diferentes.

    ma : 0..15; -- Em comboios ERTMS-NoTIMS o MA é de VSS em VSS.

-- IVAR
 
-- INIT

DEFINE
    is_train_in_ttd0 := train >= 0 & train < 5;
    is_train_in_ttd1 := train >= 5 & train < 10;
    is_train_in_ttd2 := train >= 10 & train < 15;

    is_ttd0_free := line[0][0] = f & line[0][1] = f & line[0][2] = f & line[0][3] = f & line[0][4] = f;
    is_ttd1_free := line[1][0] = f & line[1][1] = f & line[1][2] = f & line[1][3] = f & line[1][4] = f;
    is_ttd2_free := line[2][0] = f & line[2][1] = f & line[2][2] = f & line[2][3] = f & line[2][4] = f;
    
    -- As the TTD info is safe, when a train leaves a TTD the one before is freed
    ttd_is_safe := (is_train_in_ttd1 -> is_ttd0_free) &
                   (is_train_in_ttd2 -> (is_ttd1_free & is_ttd0_free));

    -- Integrity can not be verified so all the VSS in the TTD that the train is are left "unknown"
    -- Ex: | u | u | u | o |  |
    integrity := (train mod 5 = 1 -> line[train/5][0] = u) &
                 (train mod 5 = 2 -> line[train/5][0] = u & line[train/5][1] = u) &
                 (train mod 5 = 3 -> line[train/5][0] = u & line[train/5][1] = u & line[train/5][2] = u) &
                 (train mod 5 = 4 -> line[train/5][0] = u & line[train/5][1] = u & line[train/5][2] = u &line[train/5][3] = u);

ASSIGN
    init(train) := 0;
    init(ma) := 1;

/--
Estado inicial tendo em conta a posição inicial do train.

    init(line[0][0]) := o; -- Comboio ERTMS NON-TIMS começa na VSS 0
    init(line[0][1]) := u; 
    init(line[0][2]) := u;
    init(line[0][3]) := u; 
    init(line[0][4]) := u;  
    init(line[1][0]) := f; -- TTD 1
    init(line[1][1]) := f;
    init(line[1][2]) := f;
    init(line[1][3]) := f;
    init(line[1][4]) := f;
    init(line[2][0]) := f; -- TTD 2
    init(line[2][1]) := f;
    init(line[2][2]) := f;
    init(line[2][3]) := f;
    init(line[2][4]) := f;
--/

    next(ma) := case
                   ma = 14 : ma;
                   is_train_in_ttd0 & line[0][(train + 1) mod 5] = f : train + 1;
                   train = 4 & line[1][0] = f : train + 1;                          -- A conta ((train + 1) mod 5) não inclui a mudança de TTD
                   is_train_in_ttd1 & line[1][(train + 1) mod 5] = f : train + 1;
                   train = 9 & line[2][0] = f : train + 1;                          -- A conta ((train + 1) mod 5) não inclui a mudança de TTD
                   is_train_in_ttd2 & line[2][(train + 1) mod 5] = f : train + 1;
                   TRUE : ma;
                esac;

    next(train) := case
                    train = 14 : 14;
                    train < ma : train + 1; -- O comboio avança caso o MA lhe diga que pode avançar
                    TRUE : train;
                   esac;

    line[0][0] := case -- ERTMS-NonTIMS train triggers the VSS 0
                    train = 0 : o;                      -- Se o comboio estiver na posição do VSS então ele está ocupado
                    is_train_in_ttd0 & train > 0 : u;   /-- Se o comboio está no TTD em questão 
                                                            mas num VSS à frente do VSS em questão então passa a "unknown"
                                                        --/
                    !is_train_in_ttd0 : f;              -- Caso o comboio não esteja no TTD em questão então este está livre
                  esac; 

    line[0][1] := case
                    train = 1 : o;
                    is_train_in_ttd0 & train > 1 : u;
                    !is_train_in_ttd0 : f;
                    TRUE : f;
                  esac; 
    line[0][2] := case
                    train = 2 : o;
                    is_train_in_ttd0 & train > 2 : u;
                    !is_train_in_ttd0 : f;
                    TRUE : f;
                  esac; --
    line[0][3] := case
                    train = 3 : o;
                    is_train_in_ttd0 & train > 3 : u;
                    !is_train_in_ttd0 : f;
                    TRUE : f;
                  esac;
    line[0][4] := case
                    train = 4 : o;
                    is_train_in_ttd0 & train > 4 : u;
                    !is_train_in_ttd0 : f;
                    TRUE : f;
                  esac; -- 
    line[1][0] := case -- TTD 1
                    train = 5 : o;
                    is_train_in_ttd1 & train > 5 : u;
                    !is_train_in_ttd1 : f;
                    TRUE : f;
                  esac;
    line[1][1] := case
                    train = 6 : o;
                    is_train_in_ttd1 & train > 6 : u;
                    !is_train_in_ttd1 : f;
                    TRUE : f;
                  esac;
    line[1][2] := case
                    train = 7 : o;
                    is_train_in_ttd1 & train > 7 : u;
                    !is_train_in_ttd1 : f;
                    TRUE : f;
                  esac;
    line[1][3] := case
                    train = 8 : o;
                    is_train_in_ttd1 & train > 8 : u;
                    !is_train_in_ttd1 : f;
                    TRUE : f;
                  esac;
    line[1][4] := case
                    train = 9 : o;
                    is_train_in_ttd1 & train > 9 : u;
                    !is_train_in_ttd1 : f;
                    TRUE : f;
                  esac;
    line[2][0] := case  -- TTD 2
                    train = 10 : o;
                    is_train_in_ttd2 & train > 10 : u;
                    !is_train_in_ttd2 : f;
                    TRUE : f;
                  esac;
    line[2][1] := case
                    train = 11 : o;
                    is_train_in_ttd2 & train > 11 : u;
                    !is_train_in_ttd2 : f;
                    TRUE : f;
                  esac;
    line[2][2] := case
                    train = 12 : o;
                    is_train_in_ttd2 & train > 12 : u;
                    !is_train_in_ttd2 : f;
                    TRUE : f;
                  esac;
    line[2][3] := case
                    train = 13 : o;
                    is_train_in_ttd2 & train > 13 : u;
                    !is_train_in_ttd2 : f;
                    TRUE : f;
                  esac;
    line[2][4] := case
                    train = 14 : o;
                    is_train_in_ttd2 & train > 14 : u;
                    !is_train_in_ttd2 : f;
                    TRUE : f;
                  esac;

CTLSPEC AF train = 14;  -- Em todos os ramos, eventualemente o comboio chega ao destino.

CTLSPEC AG integrity;   -- Em todos os ramos, se o comboio está numa VSS de um TTD, então todos os VSS para trás desse estão "unknown",
                        -- pois não é possível inferir sobre a integridade do comboio.

CTLSPEC AG ttd_is_safe; -- Em todos os ramos, como a informação vinda de uma TTD é segura, em todos os estados,
                        -- se o comboio está numa TTD então todas para trás estão livres.
